/* This is an autogenerated file from a template. Do not edit this file as it will be overwritten.*/
/**
 *
 * startup_params.h
 * 
 * Startup parameters
 *
 * Component: state machine
 */ /*
 *
 * Motor Control Application Framework
 * R7/RC37 (commit 116330, build on 2023 Feb 09)
 *
 * (c) 2017 - 2023 Microchip Technology Inc. and its subsidiaries. You may use
 * this software and any derivatives exclusively with Microchip products.
 *
 * This software and any accompanying information is for suggestion only.
 * It does not modify Microchip's standard warranty for its products.
 * You agree that you are solely responsible for testing the software and
 * determining its suitability.  Microchip has no obligation to modify,
 * test, certify, or support the software.
 *
 * THIS SOFTWARE IS SUPPLIED BY MICROCHIP "AS IS".  NO WARRANTIES,
 * WHETHER EXPRESS, IMPLIED OR STATUTORY, APPLY TO THIS SOFTWARE,
 * INCLUDING ANY IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY,
 * AND FITNESS FOR A PARTICULAR PURPOSE, OR ITS INTERACTION WITH
 * MICROCHIP PRODUCTS, COMBINATION WITH ANY OTHER PRODUCTS, OR USE IN ANY
 * APPLICATION.
 *
 * IN NO EVENT WILL MICROCHIP BE LIABLE FOR ANY INDIRECT, SPECIAL,
 * PUNITIVE, INCIDENTAL OR CONSEQUENTIAL LOSS, DAMAGE, COST OR EXPENSE OF
 * ANY KIND WHATSOEVER RELATED TO THE USE OF THIS SOFTWARE, THE
 * motorBench(R) DEVELOPMENT SUITE TOOL, PARAMETERS AND GENERATED CODE,
 * HOWEVER CAUSED, BY END USERS, WHETHER MICROCHIP'S CUSTOMERS OR
 * CUSTOMER'S CUSTOMERS, EVEN IF MICROCHIP HAS BEEN ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGES OR THE DAMAGES ARE FORESEEABLE. TO THE
 * FULLEST EXTENT ALLOWED BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL
 * CLAIMS IN ANY WAY RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT
 * OF FEES, IF ANY, THAT YOU HAVE PAID DIRECTLY TO MICROCHIP FOR THIS
 * SOFTWARE.
 *
 * MICROCHIP PROVIDES THIS SOFTWARE CONDITIONALLY UPON YOUR ACCEPTANCE OF
 * THESE TERMS.
 *
 *
 ******************************************************************************/
#ifndef __STARTUP_PARAMS_H
#define __STARTUP_PARAMS_H

#ifdef  __cplusplus
extern "C" {
#endif

//************** Start-Up Parameters **************

/*
 * Startup operating parameters:
 *
 * Istartup:                       5.250  A
 * Kspring:                        1.174  Nm/rad
 * omega_crit:                   406.455  rad/s
 *                                 3.881 kRPM
 * omega0:                        20.944  rad/s
 *                               200.000  RPM
 * omega_min:                      4.189  rad/s
 *                                40.000  RPM
 * omega1:                        20.944  rad/s
 *                               200.000  RPM
 * accel_limit_0:                290.867  rad/s^2
 *                                 2.778 kRPM/s
 * accel_limit_1:                  1.454 krad/s^2
 *                                13.888 kRPM/s
 * accel0:                       140.291  rad/s^2
 *                                 1.340 kRPM/s
 * accel1:                       140.291  rad/s^2
 *                                 1.340 kRPM/s
 * t1:                           149.289 ms
 * t2:                             0.000  s
 * B_desired:                      5.777 mNm/(rad/s)
 * B_added:                        5.738 mNm/(rad/s)
 * damping_gain_ideal:           102.618 mA/(rad/s)
 * damping_gain_max:               1.337  A/(rad/s)
 * damping_gain:                 102.618 mA/(rad/s)
 * damping_threshold:              8.378  rad/s
 *                                80.000  RPM
 * damping_Imax:                 700.000 mA
 * t_rampup:                      14.929 ms
 * dIdt_rampup:                  351.667  A/s
 * t_align:                        0.000  s
 * t_hold:                         0.000  s
 * t_rampdown_decay:              98.412 ms
 * Irampdown_end:                262.500 mA
 * rampup_angle:                 -523.599 mrad
 * align_angle_delta:            523.599 mrad
 * theta_error_converge_rate:     17.453  rad/s
 *                               166.667  RPM
 */

/* first startup threshold velocity */
#define STARTUP_ACCEL0_VELOCITY_THRESHOLD       2185      // Q15(  0.06668) = +200.04272 RPM         = +200.00000 RPM         + 0.0214%
/* second startup threshold velocity */
#define STARTUP_ACCEL1_VELOCITY_THRESHOLD       2185      // Q15(  0.06668) = +200.04272 RPM         = +200.00000 RPM         + 0.0214%
/* threshold velocity for damping */
#define STARTUP_DAMPING_THRESHOLD             874      // Q15(  0.02667) =  +80.01709 RPM         =  +80.00000 RPM         + 0.0214%
#define Q15_THETADELTA (Q15(THETADELTA/180.0))

/* open loop startup current ramp from initial startup current to startup current */
/* motor current from end of current rampup phase to end of startup */
#define MCAF_STARTUP_CURRENT                 3902      // Q15(  0.11908) =   +5.24998 A           =   +5.25000 A           - 0.0004%
/* motor current at beginning of startup */
#define MCAF_STARTUP_CURRENT_INITIAL            0      // Q15(  0.00000) =   +0.00000 A           =   +0.00000 A           + 0.0000%
/* maximum current amplitude used for active damping */
#define STARTUP_DAMPING_IQMAX                 520      // Q15(  0.01587) = +699.63867 mA          = +700.00000 mA          - 0.0516%
/* binary point for active damping gain */
#define STARTUP_DAMPING_SHIFT                   8
/* active damping gain */
#define STARTUP_DAMPING_GAIN                  187      // Q8(  0.73047)  = +102.51140 mA/(rad/s)  = +102.61763 mA/(rad/s)  - 0.1035%

//value of theta_error at transition
#define THETADELTA 10           


#define STARTUP_DELTA_T_FACTOR               1311
#define STARTUP_DELTA_T_FACTOR_ACCELERATION          2
/* first startup acceleration rate */
#define STARTUP_ACCELERATION0               23975      // Q15(  0.73166) = +140.29384 rad/s^2     = +140.29149 rad/s^2     + 0.0017%
/* second startup acceleration rate */
#define STARTUP_ACCELERATION1               23975      // Q15(  0.73166) = +140.29384 rad/s^2     = +140.29149 rad/s^2     + 0.0017%

/* increase in current per control cycle, during current rampup */
#define STARTUP_TORQUE_RAMPUP_RATE             13      // Q15(  0.00040) =  +17.49097 mA          =  +17.58337 mA          - 0.5255%

/* Current rampdown time constant = 0.098412 s */
/* current rampdown decay rate (=1/time constant) */
#define MCAF_RAMPDOWN_DECAY_RATE             8524      // Q24(  0.00051) =  +10.16140 1/s         =  +10.16139 1/s         + 0.0001%
#define MCAF_RAMPDOWN_DECAY_RATE_Q             24
#define MCAF_RAMPDOWN_DECAY_SHIFT (MCAF_RAMPDOWN_DECAY_RATE_Q - 16)

/* current rampdown end threshold */
#define MCAF_RAMPDOWN_END_CURRENT             195      // Q15(  0.00595) = +262.36450 mA          = +262.50000 mA          - 0.0516%

/* align angle shift after current rampup */
#define STARTUP_RAMPUP_ANGLE                -5461      // Q15( -0.16666) = -523.56682 mrad        = -523.59878 mrad        - 0.0061%
/* align angle shift after current rampup */
#define STARTUP_ALIGN_ANGLE_DELTA            5461      // Q15(  0.16666) = +523.56682 mrad        = +523.59878 mrad        - 0.0061%
/* hold time between current rampup and acceleration */
#define STARTUP_ALIGN_TIME                      0      // Q0(  0.00000)  =   +0.00000 s           =   +0.00000 s           + 0.0000%
/* hold time between velocity rampup and current rampdown */
#define STARTUP_HOLD_TIME                       0      // Q0(  0.00000)  =   +0.00000 s           =   +0.00000 s           + 0.0000%
// PWM loops necessary for transitioning from open loop to closed loop
#define TRANSITION_STEPS   IRP_PERCALC/4

/* convergence rate (electrical frequency) for forcing angle error towards zero, during transition to closed-loop */
#define STARTUP_THETA_ERROR_CONVERGE_RATE       2330      // Q24(  0.00014) =  +17.45203 rad/s       =  +17.45329 rad/s       - 0.0072%
#define STARTUP_THETA_ERROR_CONVERGE_RATE_Q         24


#ifdef  __cplusplus
}
#endif

#endif // __STARTUP_PARAMS_H
